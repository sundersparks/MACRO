Function E013_03()  ' Party Name completeness(Hot Scan) rule
 Rem Delete Old Content
 Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
 If Var = 1 Then
  Var = 2
 End If
 ' ****************************************************
'******************* Deleting Temporary data from Anomaly_list *********************
 ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
 ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
 '***********************************************************************
  
  '  ****************** Creating Database Connection***************
  
'   On Error Resume Next
 Application.DisplayAlerts = False
 Workbooks.Open FileName:=DQMCFilePath, Password:="DQMC_OFAC", ReadOnly:=False, IgnoreReadOnlyRecommended:=True
 Application.DisplayAlerts = True
  Set oCn1 = CreateObject("ADODB.Connection")
   Dim rs1 As New ADODB.Recordset
 oCn1.Open "Provider=Microsoft.ACE.OLEDB.12.0;" & _
         "Data Source= " & DQMCFilePath & ";" & _
         "Extended Properties=Excel 12.0;Jet OLEDB:Database Password=DQMC_OFAC;"
Application.Wait DateAdd("s", 5, Now)

' ***************************************************
 Set objFileSys = CreateObject("Scripting.FileSystemObject")
 Dim j: j = 2
 Dim anomaly_count: anomaly_count = 0
  valid_temp = 0
 No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count
     
    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     fnamesplit = Split(fName, "_")    ' Getting Data Source Name
     Var = fnamesplit(1)
'     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
     Set txsInput = objFileSys.OpenTextFile(FeedFilePath & "\" & fName, 1)
         Do While txsInput.AtEndOfStream <> True
        ' Feed File Logic, spliting the data
            readlne = txsInput.Readline
            party_name = Mid(readlne, 31, 100)
            chk = chkregexp(Trim(party_name))
            Feed_ID = Trim(Mid(readlne, 1, 30))
            If Feed_ID = Empty Then
               Feed_ID = ""
            End If
             party_name = Trim(Mid(readlne, 31, 100))
            If party_name = Empty Then
                party_name = ""
             End If
             
                If (chk = 0) Then
                    
                    
            '********************************************************************************
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = party_name
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = Var
                    Select Case Var
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0002"
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0003"
                     Case "MSB"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0004"
                     Case "PAP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0005"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0006"
                     Case "SEI"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0007"
                     Case "TD1"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0008"
                     Case "TD2"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0009"
                     Case "TD3"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0010"
                     Case "TSP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0011"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0012"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else  ' Party Name Valid
                  DataSourceName = Var & "_DELTA"
                  Query = "SELECT * FROM [BR E013-03$A6:BZ] where ID like '" & Feed_ID & "' and Name like '" & party_name & "' and SourceSystemCode like '" & DataSourceName & "' "
                'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                 rs1.Open Query, oCn1, adOpenStatic, adLockOptimistic, adCmdText
                 Rem Select DQMC_WB
                 If rs1.RecordCount > 0 Then
                   flag = 1
                   If (valid_temp = 0) Then
                       Call Summary_Report("E013-03", "OFAC_HotScan_PartyName_Completeness_valid_Charcters", "Fail", "", "")
                       Call detail_Report_Header("OFAC_HotScan_PartyName_Completeness_valid_Charcters")
                        valid_temp = valid_temp + 1
                        Failed_Test_Case = Failed_Test_Case + 1
                    End If
        '       ***************************************************************
                 If flag = 1 Then
                 Ver_Col_Name = "Name"
                   Select Case Var
                      Case "CCX"
                       Call detail_report("TS_0002", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "CIF"
                        Call detail_report("TS_0003", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "MSB"
                       Call detail_report("TS_0004", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "PAP"
                        Call detail_report("TS_0005", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "PTT"
                        Call detail_report("TS_0006", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "SEI"
                       Call detail_report("TS_0007", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "TD1"
                       Call detail_report("TS_0008", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "TD2"
                        Call detail_report("TS_0009", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "TD3"
                         Call detail_report("TS_0010", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "TSP"
                        Call detail_report("TS_0011", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                      Case "WKD"
                       Call detail_report("TS_0012", "Fail", Var, Feed_ID, Ver_Col_Name & " column should not have the value as " & party_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & party_name & " for FeedId " & Feed_ID)
                    End Select
                   End If

                  End If
                  rs1.Close
              End If
         Loop
       Call write_anomaly_count(Var, temp)
    Next
   Set rs1 = Nothing
   Set oCn1 = Nothing
   
   ' *************************Party Name should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E013-03", "OFAC_HotScan_PartyName_Null_valid_Charcters", "Pass", "", "")
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************
   ' *************************Party Name should not have null or invalid Characters*************************
   
   chk_Anomaly = no_of_anomaly("E013-03", anomaly_count)
   
   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_PartyName_Completeness_Null_Invalid_Charcters")
'      Call Summary_Report("E013-03", "TS001_OFAC_HotScan_PartyName_Null_Invalid_Charcters", "Pass")
      temp = verify_DQMC("ID", "BR E013-03", "Name", anomaly_count)
      If (temp = 0) Then
        Passed_Test_Case = Passed_Test_Case + 1
        Call Summary_Report("E013-03", "OFAC_HotScan_PartyName_Completeness_Null_Invalid_Charcters", "Pass", "No of Anomaly is equal to the anomalies in DQMC", "")
       Else
        Failed_Test_Case = Failed_Test_Case + 1
        Call Summary_Report("E013-03", "OFAC_HotScan_PartyName_Completeness_Null_Invalid_Charcters", "Fail", "No of Anomaly is equal to the anomalies in DQMC", "")
      End If
      detailsReport.Close
       Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
      Failed_Test_Case = Failed_Test_Case + 1
      Call detail_Report_Header("OFAC_HotScan_PartyName_Completeness_Null_Invalid_Charcters")
'      Call Summary_Report("E013-03", "TS001_OFAC_HotScan_PartyName_Null_Invalid_Charcters", "Pass")
      temp = verify_DQMC("ID", "BR E013-03", "Name", anomaly_count)
      Call Summary_Report("E013-03", "OFAC_HotScan_PartyName_Completeness_Null_Invalid_Charcters", "Fail", "No of Anomaly is equal to the anomalies in DQMC", "")
   End If
End Function


Function E348_03()  ' Primary Physical Address - City - Conformity (HotScan)
 Rem Delete Old Content
 Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
 If Var = 1 Then
  Var = 2
 End If
 valid_temp = 0
 Application.DisplayAlerts = False
 Workbooks.Open FileName:=DQMCFilePath, Password:="DQMC_OFAC", ReadOnly:=False, IgnoreReadOnlyRecommended:=True
 Application.DisplayAlerts = True
  Set oCn1 = CreateObject("ADODB.Connection")
   Dim rs1 As New ADODB.Recordset
 oCn1.Open "Provider=Microsoft.ACE.OLEDB.12.0;" & _
         "Data Source= " & DQMCFilePath & ";" & _
         "Extended Properties=Excel 12.0;Jet OLEDB:Database Password=DQMC_OFAC;"
  
 ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
 ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' FeedFilePath = "U:\OFAC_Data_Integrity\Original_FeedFiles"
  
 '******************** Creating the Connection for Feed File *******************
    Dim objStream, strData
    Set objStream = CreateObject("ADODB.Stream")
    objStream.Charset = "utf-8"
    objStream.LineSeparator = 10
    objStream.Open
    
 Dim j: j = 2
 Dim anomaly_count: anomaly_count = 0
     
 No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count
     
    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
'     Set txsInput = objFileSys.OpenTextFile(FeedFilePath & "\" & fName, 1)
      objStream.LoadFromFile (FeedFilePath & "\" & fName)
         If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "PAP" Or strDataSource = "PTT" Or strDataSource = "TD3" Or strDataSource = "TSP" Or strDataSource = "WKD" Then
         
            Do While objStream.EOS <> True
            
               readlne = objStream.ReadText(-2)
               city_name = Mid(readlne, 331, 50)
                Feed_ID = Trim(Mid(readlne, 1, 30))
                    If Feed_ID = Empty Then
                      Feed_ID = ""
                    End If
                    city_name = Trim(city_name)
                    city_name = Replace(city_name, "'", "''")
                    If city_name = Empty Then
                        city_name = ""
                        chk = 1
                      Else
                        chk = chkregexp(Trim(city_name))
                    End If
                    
              If (chk = 0) Then
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = city_name
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                     
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0013"
                       
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0014"
                     Case "PAP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0015"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0016"
                     Case "TD3"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0017"
                     Case "TSP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0018"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0019"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else ' Valid City Name
                  
                  DataSourceName = strDataSource & "_DELTA"
                  Query = "SELECT * FROM [BR E348-03$A6:BZ] where ID like '" & Feed_ID & "' and City like '" & city_name & "' and SourceSystemCode like '" & DataSourceName & "' "
                  rs1.Open Query, oCn1, adOpenStatic, adLockOptimistic, adCmdText
                 Rem Select DQMC_WB
                 If rs1.RecordCount > 0 Then
                   flag = 1
                   If (valid_temp = 0) Then
                       Call Summary_Report("E348_03", "OFAC_HotScan_Primary Physical Address - City-Conformity_null_or_valid_Charcters", "Fail", "", 14)
                       Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - City-Conformity_null_or_valid_Charcters")
                        valid_temp = valid_temp + 1
                        Failed_Test_Case = Failed_Test_Case + 1
                    End If
        '       ***************************************************************
                 If flag = 1 Then
                  Ver_Col_Name = "City"
                   Select Case strDataSource
                      Case "CCX"
                       Call detail_report("TS_0013", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "CIF"
                        Call detail_report("TS_0014", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                     Case "PAP"
                        Call detail_report("TS_0015", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "PTT"
                        Call detail_report("TS_0016", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                     Case "TD3"
                         Call detail_report("TS_0017", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "TSP"
                        Call detail_report("TS_0018", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "WKD"
                       Call detail_report("TS_0019", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                    End Select
                   End If
                   
                  End If
                  rs1.Close
                
             End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next
   
   
   Set rs1 = Nothing
   Set oCn1 = Nothing
   
   ' *************************City Name should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E348_03", "OFAC_HotScan_Primary Physical Address - City-Conformity_null_or_valid_Charcters", "Pass", "", 14)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************
   
   ' *************************City Name should not have invalid Characters*************************
   chk_Anomaly = no_of_anomaly("E348-03", anomaly_count)
   
   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - City-Conformity_Invalid_Charcters")
'      Call Summary_Report("E013-03", "TS001_OFAC_HotScan_PartyName_Null_Invalid_Charcters", "Pass")
      temp = verify_DQMC("ID", "BR E348-03", "City", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("E348-03", "OFAC_HotScan_Primary Physical Address - City-Conformity_Invalid_Charcters", "Pass", "", 7)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("E348-03", "OFAC_HotScan_Primary Physical Address - City-Conformity_Invalid_Charcters", "Fail", "", 7)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
      Call Summary_Report("E348-03", "OFAC_HotScan_Primary Physical Address - City-Conformity_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 7)
   End If

End Function




Function E351_07()  ' Primary Physical Address - Country - Conformity (Hotscan)
 Rem Delete Old Content
 Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
 If Var = 1 Then
  Var = 2
 End If
 valid_temp = 0
 ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
 ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
 Call excel_db_open
 '******************** Creating the Connection for Feed File *******************
Dim objStream, strData
Set objStream = CreateObject("ADODB.Stream")
objStream.Charset = "utf-8"
objStream.LineSeparator = 10
objStream.Open


 Dim j: j = 2
 Dim anomaly_count_ccx: anomaly_count_ccx = 0
     
 No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count
     
    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
     objStream.LoadFromFile (FeedFilePath & "\" & fName)
     
         If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "MSB" Or strDataSource = "PAP" Or strDataSource = "PTT" Or strDataSource = "TD2" Or strDataSource = "TD3" Or strDataSource = "TSP" Or strDataSource = "WKD" Then
            Do While objStream.EOS <> True
               readlne = objStream.ReadText(-2)
               strCountry = Mid(readlne, 481, 50)
               Feed_ID = Trim(Mid(readlne, 1, 30))
                    If Feed_ID = Empty Then
                      Feed_ID = ""
                    End If
                    strCountry = Trim(strCountry)
                    strCountry = Replace(strCountry, "'", "''")
                    If strCountry = Empty Then
                       strCountry = ""
                       chk = 1
                      Else
                        chk = chkregexp(Trim(strCountry))
                    End If
               If (chk = 0) Then
                    
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = strCountry
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0020"
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0021"
                     Case "MSB"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0022"
                     Case "PAP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0023"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0024"
                     Case "TD2"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0025"
                     Case "TD3"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0026"
                     Case "TSP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0027"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0028"
                    End Select
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                  Else
                     DataSourceName = strDataSource & "_DELTA"
                      Query = "SELECT * FROM [BR E351-07$A6:BZ] where ID like '" & Feed_ID & "' and Country like '" & strCountry & "' and SourceSystemCode like '" & DataSourceName & "' "
                    'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                     rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     Rem Select DQMC_WB
                    If rsexcel.RecordCount > 0 Then
                      flag = 1
                      If (valid_temp = 0) Then
                        Call Summary_Report("E351-07", "OFAC_HotScan_Primary Physical Address - Country-Conformity_null_or_valid_Charcters", "Fail", "", 18)
                          Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Country-Conformity_null_or_valid_Charcters")
                           valid_temp = valid_temp + 1
                           Failed_Test_Case = Failed_Test_Case + 1
                       End If
            '       ***************************************************************
                        If flag = 1 Then
                         Ver_Col_Name = "Country"
                          Select Case strDataSource
                            Case "CCX"
                              Call detail_report("TS_0020", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                            Case "CIF"
                               Call detail_report("TS_0021", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                            Case "MSB"
                               Call detail_report("TS_0022", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                            Case "PAP"
                               Call detail_report("TS_0023", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                             Case "PTT"
                               Call detail_report("TS_0024", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                            Case "TD2"
                               Call detail_report("TS_0025", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                            Case "TD3"
                               Call detail_report("TS_0026", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                             Case "TSP"
                               Call detail_report("TS_0027", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                             Case "WKD"
                              Call detail_report("TS_0028", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strCountry & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strCountry & " for FeedId " & Feed_ID)
                           End Select
                        End If
                      End If
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next
    
'    exlconn.Close
'
 ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing
   ' *************************Country Name should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E351-07", "OFAC_HotScan_Primary Physical Address - Country-Conformity_null_or_valid_Charcters", "Pass", "", 18)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************
   
   chk_Anomaly = no_of_anomaly("E351-07", anomaly_count)
  
   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Country-Conformity_Invalid_Charcters")
      temp = verify_DQMC("ID", "BR E351-07", "Country", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("E351-07", "OFAC_HotScan_Primary Physical Address - Country-Conformity_Invalid_Charcters", "Pass", "", 9)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("E351-07", "OFAC_HotScan_Primary Physical Address - Country-Conformity_Invalid_Charcters", "Fail", "", 9)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
       Failed_Test_Case = Failed_Test_Case + 1
      Call Summary_Report("E351-07", "OFAC_HotScan_Primary Physical Address - Country-Conformity_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 9)
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Country-Conformity_Invalid_Charcters")
       temp = verify_DQMC("ID", "BR E351-07", "Country", anomaly_count)
   End If

End Function


Function E349_02()  ' Primary Physical Address - State - Conformity (Hotscan)
 Rem Delete Old Content
 Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
 If Var = 1 Then
  Var = 2
 End If

 ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
 ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
 Call excel_db_open
'*************************************************
' Set objFileSys = CreateObject("Scripting.FileSystemObject")
'******************** Creating the Connection for Feed File *******************
Dim objStream, strData
Set objStream = CreateObject("ADODB.Stream")
objStream.Charset = "utf-8"
objStream.LineSeparator = 10
objStream.Open
 Dim j: j = 2
 No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count

    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     valid_temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
     
     objStream.LoadFromFile (FeedFilePath & "\" & fName)
     
'     Set txsInput = objFileSys.opentextfile(FeedFilePath & "\" & fName, 1)

         If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "PAP" Or strDataSource = "PTT" Or strDataSource = "TD3" Or strDataSource = "TSP" Or strDataSource = "WKD" Then

            Do While objStream.EOS <> True

               readlne = objStream.ReadText(-2)
               
               strState = Mid(readlne, 381, 50)
               Debug.Print readlne
               Feed_ID = Trim(Mid(readlne, 1, 30))
                If Feed_ID = Empty Then
                  Feed_ID = ""
                End If
                strState = Trim(strState)
                strState = Replace(strState, "'", "''")
                If strState = Empty Or strState = "" Then
                 strState = ""
                 chk = 1
                 Else
                  chk = chkregexp(Trim(strState))
                End If
                
               If (chk = 0) Then
            '********************************************************************************
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = strState
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0029"
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0030"
                     Case "PAP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0031"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0032"
                     Case "TD3"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0033"
                     Case "TSP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0034"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0035"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else
                     
                     DataSourceName = strDataSource & "_DELTA"
                      Query = "SELECT * FROM [BR E349-02$A6:BZ] where ID like '" & Feed_ID & "' and State like '" & strState & "' and SourceSystemCode like '" & DataSourceName & "' "
                    'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                     rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     Rem Select DQMC_WB
                    If rsexcel.RecordCount > 0 Then
                      flag = 1
                      If (valid_temp = 0) Then
                      Call Summary_Report("E349-02", "OFAC_HotScan_Primary Physical Address - State-Conformity_Null_Or_valid_Charcters", "Fail", "", 14)
                          Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - State-Conformity_valid_Charcters")
                           valid_temp = valid_temp + 1
                           Failed_Test_Case = Failed_Test_Case + 1
                       End If
            '       ***************************************************************
                        If flag = 1 Then
                         Ver_Col_Name = "State"
                          Select Case strDataSource
                            Case "CCX"
                              Call detail_report("TS_0029", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "CIF"
                               Call detail_report("TS_0030", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "PAP"
                               Call detail_report("TS_0031", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "PTT"
                               Call detail_report("TS_0032", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "TD3"
                               Call detail_report("TS_0033", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "TSP"
                               Call detail_report("TS_0034", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                            Case "WKD"
                              Call detail_report("TS_0035", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strState & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strState & " for FeedId " & Feed_ID)
                           End Select
                        End If
                      End If
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next

   ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing

' *************************State should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E349-02", "OFAC_HotScan_Primary Physical Address - State-Conformity_Null_Or_valid_Charcters", "Pass", "", 14)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************

   chk_Anomaly = no_of_anomaly("E349-02", anomaly_count)

   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - State-Conformity_Invalid_Charcters")
      temp = verify_DQMC("ID", "BR E349-02", "State", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("E349-02", "OFAC_HotScan_Primary Physical Address - State-Conformity_Invalid_Charcters", "Pass", "", 7)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("E349-02", "OFAC_HotScan_Primary Physical Address - State-Conformity_Invalid_Charcters", "Fail", "", 7)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
      Failed_Test_Case = Failed_Test_Case + 1
      Call Summary_Report("E349-02", "OFAC_HotScan_Primary Physical Address - State-Conformity_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 7)
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - State-Conformity_Invalid_Charcters")
      temp = verify_DQMC("ID", "BR E349-02", "State", anomaly_count)
   End If

Set objStream = Nothing
End Function


Function EC19_01()  ' Primary Physical Address - Province - Conformity (Hotscan)
Rem Delete Old Content
Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
If Var = 1 Then
  Var = 2
End If

ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
Call excel_db_open
'*************************************************
' Set objFileSys = CreateObject("Scripting.FileSystemObject")
'******************** Creating the Connection for Feed File *******************
Dim objStream, strData
Set objStream = CreateObject("ADODB.Stream")
objStream.Charset = "utf-8"
objStream.LineSeparator = 10
objStream.Open

Dim j: j = 2
No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count

    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     valid_temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
     
     objStream.LoadFromFile (FeedFilePath & "\" & fName)
     
'     Set txsInput = objFileSys.opentextfile(FeedFilePath & "\" & fName, 1)

         If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "PTT" Or strDataSource = "WKD" Then

            Do While objStream.EOS <> True

               readlne = objStream.ReadText(-2)
               
               strProvince = Mid(readlne, 431, 50)
               Debug.Print readlne
               Feed_ID = Trim(Mid(readlne, 1, 30))
                If Feed_ID = Empty Then
                  Feed_ID = ""
                End If
                strProvince = Trim(strProvince)
                strProvince = Replace(strProvince, "'", "''")
                If strProvince = Empty Or strProvince = "" Then
                 strProvince = ""
                 chk = 1
                 Else
                  chk = chkregexp(Trim(strProvince))
                End If
                
               If (chk = 0) Then ' Case for Invalid
            '********************************************************************************
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = strProvince
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0048"
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0049"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0050"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0051"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else ' Case for Null and Valid
                     
                     DataSourceName = strDataSource & "_DELTA"
                      Query = "SELECT * FROM [BR EC19-01$A6:BZ] where ID like '" & Feed_ID & "' and Province like '" & strProvince & "' and SourceSystemCode like '" & DataSourceName & "' "
                    'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                     rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     Rem Select DQMC_WB
                    If rsexcel.RecordCount > 0 Then
                      flag = 1
                      If (valid_temp = 0) Then
                            Call Summary_Report("EC19-01", "OFAC_HotScan_Primary Physical Address - Province-Conformity_Null_Or_valid_Charcters", "Fail", "", 8)
                            Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Province-Conformity_Null_Or_valid_Charcters")
                            valid_temp = valid_temp + 1
                           Failed_Test_Case = Failed_Test_Case + 1
                       End If
            '       ***************************************************************
                        If flag = 1 Then
                         Ver_Col_Name = "Province"
                          Select Case strDataSource
                            Case "CCX"
                              Call detail_report("TS_0048", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strProvince & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strProvince & " for FeedId " & Feed_ID)
                            Case "CIF"
                               Call detail_report("TS_0049", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strProvince & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strProvince & " for FeedId " & Feed_ID)
                            Case "PTT"
                               Call detail_report("TS_0050", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strProvince & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strProvince & " for FeedId " & Feed_ID)
                            Case "WKD"
                              Call detail_report("TS_0051", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strProvince & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strProvince & " for FeedId " & Feed_ID)
                           End Select
                        End If
                      End If
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next

   ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing

' *************************Province should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("EC19-01", "OFAC_HotScan_Primary Physical Address - Province-Conformity_Null_Or_valid_Charcters", "Pass", "", 8)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************

   chk_Anomaly = no_of_anomaly("EC19-01", anomaly_count)

   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Province-Conformity_Invalid_Charcters")
      temp = verify_DQMC("ID", "BR EC19-01", "Province", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("EC19-01", "OFAC_HotScan_Primary Physical Address - Province-Conformity_Invalid_Charcters", "Pass", "", 4)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("EC19-01", "OFAC_HotScan_Primary Physical Address - Province-Conformity_Invalid_Charcters", "Fail", "", 4)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
      Failed_Test_Case = Failed_Test_Case + 1
      Call Summary_Report("EC19-01", "OFAC_HotScan_Primary Physical Address - Province-Conformity_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 4)
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Province-Conformity_Invalid_Charcters")
      temp = verify_DQMC("ID", "BR EC19-01", "Province", anomaly_count)
   End If

Set objStream = Nothing
End Function



Function EC20_01()  ' Primary Physical Address - Date of birth - Conformity (Hotscan)
Rem Delete Old Content
Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
If Var = 1 Then
  Var = 2
End If

ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
Call excel_db_open
'*************************************************
ActiveWorkbook.Sheets("Summary").Select
currentdate = Sheets("Summary").Cells(1, 15).Value
' Set objFileSys = CreateObject("Scripting.FileSystemObject")
'******************** Creating the Connection for Feed File *******************
Dim objStream, strData
Set objStream = CreateObject("ADODB.Stream")
objStream.Charset = "utf-8"
objStream.LineSeparator = 10
objStream.Open

Dim j: j = 2
No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count

    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     valid_temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     objStream.LoadFromFile (FeedFilePath & "\" & fName)

         If strDataSource = "CCX" Or strDataSource = "MSB" Or strDataSource = "TD3" Or strDataSource = "WKD" Then

            Do While objStream.EOS <> True
               readlne = objStream.ReadText(-2)
               If strDataSource = "CCX" Then
                  strDOBExtracted = Mid(readlne, 532, 10)
               End If
               If strDataSource = "MSB" Then
                  strDOBExtracted = Mid(readlne, 632, 10)
               End If
              If strDataSource = "TD3" Then
                  strDOBExtracted = Mid(readlne, 532, 100)
               End If
               If strDataSource = "WKD" Then
                  strDOBExtracted = Mid(readlne, 534, 10)
               End If
              
               Feed_ID = Trim(Mid(readlne, 1, 30))
                If Feed_ID = Empty Then
                  Feed_ID = ""
                End If
                
                strDOBExtracted = Trim(strDOBExtracted)
                strDOBExtracted = Replace(strDOBExtracted, "'", "''")
                If strDOBExtracted = Empty Or strDOBExtracted = "" Then
                 strDOBExtracted = ""
                 chk = 1
                 Else
                  chk = check_Date(Trim(strDOBExtracted), Trim(currentdate))
                End If
                
               If (chk = 0) Then ' Case for Invalid,currentdate and future date
            '********************************************************************************
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = strDOBExtracted
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0044"
                     Case "MSB"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0045"
                     Case "TD3"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0046"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0047"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else ' Case for Null and Valid
                     
                     DataSourceName = strDataSource & "_DELTA"
                      Query = "SELECT * FROM [BR EC20-01$A6:BZ] where ID like '" & Feed_ID & "' and DOBExtracted like '" & strDOBExtracted & "' and SourceSystemCode like '" & DataSourceName & "' "
                    'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                     rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     Rem Select DQMC_WB
                    If rsexcel.RecordCount > 0 Then
                      flag = 1
                      If (valid_temp = 0) Then
                            Call Summary_Report("EC20-01", "OFAC_HotScan_Date_Of_Birth_Conformity_Null_Or_valid_Date", "Fail", "", 8)
                            Call detail_Report_Header("OFAC_HotScan_Date_Of_Birth_Conformity_Null_Or_valid_Date")
                            valid_temp = valid_temp + 1
                           Failed_Test_Case = Failed_Test_Case + 1
                       End If
            '       ***************************************************************
                        If flag = 1 Then
                         Ver_Col_Name = "DOBExtracted"
                          Select Case strDataSource
                            Case "CCX"
                              Call detail_report("TS_0044", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strDOBExtracted & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strDOBExtracted & " for FeedId " & Feed_ID)
                            Case "MSB"
                               Call detail_report("TS_0045", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strDOBExtracted & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strDOBExtracted & " for FeedId " & Feed_ID)
                            Case "TD3"
                               Call detail_report("TS_0046", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strDOBExtracted & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strDOBExtracted & " for FeedId " & Feed_ID)
                            Case "WKD"
                              Call detail_report("TS_0047", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strDOBExtracted & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strDOBExtracted & " for FeedId " & Feed_ID)
                           End Select
                        End If
                      End If
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next

   ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing

' *************************DOB should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("EC20-01", "OFAC_HotScan_Date_Of_Birth_Conformity_Null_Or_valid_Date", "Pass", "", 8)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************

   chk_Anomaly = no_of_anomaly("EC20-01", anomaly_count)

   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Date_Of_Birth_Conformity_Curernt_Future_Invalid_Date")
      temp = verify_DQMC("ID", "BR EC20-01", "DOBExtracted", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("EC20-01", "OFAC_HotScan_Date_Of_Birth_Conformity_Curernt_Future_Invalid_Date", "Pass", "", 12)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("EC20-01", "OFAC_HotScan_Date_Of_Birth_Conformity_Curernt_Future_Invalid_Date", "Fail", "", 12)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
      Failed_Test_Case = Failed_Test_Case + 1
      Call Summary_Report("EC20-01", "OFAC_HotScan_Date_Of_Birth_Conformity_Curernt_Future_Invalid_Date", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 12)
      Call detail_Report_Header("OFAC_HotScan_Date_Of_Birth_Conformity_Curernt_Future_Invalid_Date")
      temp = verify_DQMC("ID", "BR EC20-01", "DOBExtracted", anomaly_count)
   End If

Set objStream = Nothing
End Function



Function E347_03()  ' Primary Physical Address - Street - Conformity (Hotscan)
 Rem Delete Old Content
 Var = ThisWorkbook.Sheets("anomaly list").UsedRange.Rows.Count
 If Var = 1 Then
  Var = 2
 End If
 valid_temp = 0
 ThisWorkbook.Sheets("anomaly list").Range("A2:F" & Var).Delete
 ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
 Call excel_db_open
 '******************** Creating the Connection for Feed File *******************
Dim objStream, strData
Set objStream = CreateObject("ADODB.Stream")
objStream.Charset = "utf-8"
objStream.LineSeparator = 10
objStream.Open


 Dim j: j = 2
 Dim anomaly_count: anomaly_count = 0
     
 No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count
     
    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     Debug.Print FeedFilePath & "\OFAC_Autoamtion_SIT\" & fName
     objStream.LoadFromFile (FeedFilePath & "\" & fName)
     
         If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "MSB" Or strDataSource = "PAP" Or strDataSource = "PTT" Or strDataSource = "TD3" Or strDataSource = "TSP" Or strDataSource = "WKD" Then
            Do While objStream.EOS <> True
               readlne = objStream.ReadText(-2)
               strAddress1 = Mid(readlne, 131, 100)
                 strAddress1 = Replace(strAddress1, "'", "''")
               strAddress2 = Mid(readlne, 231, 100)
                 strAddress2 = Replace(strAddress2, "'", "''")
               Feed_ID = Trim(Mid(readlne, 1, 30))
                    If Feed_ID = Empty Then
                      Feed_ID = ""
                    End If
                     strAddress1 = Trim(strAddress1)
                    strAddress2 = Trim(strAddress2)
                    strStreet = Trim(strAddress1 & strAddress2)
                    strStreet = Replace(strStreet, "'", "''")
                    If strStreet = Empty Then
                       strStreet = ""
                       chk = 1
                      Else
                        chk = chkregexp(Trim(strStreet))
                    End If
                   
               If (chk = 0) Then
                    
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 1).Value = Feed_ID
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 2).Value = strAddress1
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 6).Value = strAddress2
                    ThisWorkbook.Sheets("anomaly list").Cells(j, 3).Value = strDataSource
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0036"
                     Case "CIF"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0037"
                     Case "MSB"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0038"
                     Case "PAP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0039"
                     Case "PTT"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0040"
                     Case "TD3"
                        ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0041"
                     Case "TSP"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0042"
                     Case "WKD"
                       ThisWorkbook.Sheets("anomaly list").Cells(j, 4).Value = "TS_0043"
                    End Select
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                  Else
                     DataSourceName = strDataSource & "_DELTA"
                      Query = "SELECT * FROM [BR E347-03$A6:BZ] where ID like '" & Feed_ID & "' and Address1 like '" & strAddress1 & "' and Address2 like '" & strAddress2 & "'  and SourceSystemCode like '" & DataSourceName & "' "
                    'Query = "SELECT * FROM [Sheet2$] where ID like 'X' "
                     rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     Rem Select DQMC_WB
                    If rsexcel.RecordCount > 0 Then
                      flag = 1
                      If (valid_temp = 0) Then
                        Call Summary_Report("E347-03", "OFAC_HotScan_Primary Physical Address - Street-Conformity_null_or_Address1_Address2_valid_Charcters", "Fail", "", 24)
                          Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Street-Conformity_null_or_Address1_Address2_valid_Charcters")
                           valid_temp = valid_temp + 1
                           Failed_Test_Case = Failed_Test_Case + 1
                       End If
            '       ***************************************************************
                        If flag = 1 Then
                         Ver_Col_Name1 = "Address1"
                          Ver_Col_Name2 = "Address2"
                          Ver_Col_Name = Ver_Col_Name1 & " and " & Ver_Col_Name2
                          Select Case strDataSource
                            Case "CCX"
                              Call detail_report("TS_0036", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                            Case "CIF"
                               Call detail_report("TS_0037", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                            Case "MSB"
                               Call detail_report("TS_0038", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                            Case "PAP"
                               Call detail_report("TS_0039", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                             Case "PTT"
                               Call detail_report("TS_0040", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                            Case "TD3"
                               Call detail_report("TS_0041", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                             Case "TSP"
                               Call detail_report("TS_0042", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                             Case "WKD"
                              Call detail_report("TS_0043", "Fail", strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & strAddress1 & " and " & strAddress2 & " for FeedId " & Feed_ID)
                           End Select
                        End If
                      End If
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
       End If
    Next
    
'    exlconn.Close
'
 ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing
   ' *************************Street Name should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E347-03", "OFAC_HotScan_Primary Physical Address - Street-Conformity_null_or_Address1_Address2_valid_Charcters", "Pass", "", 24)
        Passed_Test_Case = Passed_Test_Case + 1
     End If
'   ********************************************************
   
   chk_Anomaly = no_of_anomaly("E347-03", anomaly_count)
  
   If (chk_Anomaly = True) Then
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Street-Conformity_Address1_Address2_invalid_Charcters")
      temp = verify_DQMC("ID", "BR E347-03", "Street", anomaly_count)
      If (temp = 0) Then
       Passed_Test_Case = Passed_Test_Case + 1
         Call Summary_Report("E347-03", "OFAC_HotScan_Primary Physical Address - Street-Conformity_Address1_Address2_invalid_Charcters", "Pass", "", 16)
        Else
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("E347-03", "OFAC_HotScan_Primary Physical Address - Street-Conformity_Address1_Address2_invalid_Charcters", "Fail", "", 16)
       End If
      detailsReport.Close
      Set detailsReport = Nothing
    Else
      test_case_count = test_case_count + 1
       Failed_Test_Case = Failed_Test_Case + 1
      Call Summary_Report("E347-03", "OFAC_HotScan_Primary Physical Address - Street-Conformity_Address1_Address2_invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 16)
      Call detail_Report_Header("OFAC_HotScan_Primary Physical Address - Street-Conformity_Address1_Address2_invalid_Charcters")
       temp = verify_DQMC("ID", "BR E347-03", "Street", anomaly_count)
   End If

End Function



'************************** DCP Test Cases ********************************

Function E348_04()
Rem Delete Old Content
Var = ThisWorkbook.Sheets("DCPAnomalyList").UsedRange.Rows.Count
If Var = 1 Then
  Var = 2
End If
ThisWorkbook.Sheets("DCPAnomalyList").Range("A2:G" & Var).Delete
ThisWorkbook.Sheets("Total_Anomaly Count").Range("B2:B12" & Var).Delete
' *****************   DataBase Connection open *****************
'Call excel_db_open
'*************************************************
' Set objFileSys = CreateObject("Scripting.FileSystemObject")
'******************** Creating the Connection for Feed File *******************

Set feed1Stream = create_notepad_connection  'calling function for notepad object
Set dcpfeedStream = create_notepad_connection   ' this will be the object either for dcp2 or dcp3
'Set feed3Stream = create_notepad_connection
Dim j: j = 2
Dim anomaly_count: anomaly_count = 0
No_Of_Files = ThisWorkbook.Sheets("Feed File name").UsedRange.Rows.Count

 Call detail_Report_Header("OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_valid_Charcters")

    For i = 1 To No_Of_Files Step 1
     fName = ThisWorkbook.Sheets("Feed File name").Cells(i, 1).Value
     dcp2fname = ThisWorkbook.Sheets("Feed File name").Cells(i, 2).Value
     dcp3fname = ThisWorkbook.Sheets("Feed File name").Cells(i, 3).Value
     temp = 0
     valid_temp = 0
     fnamesplit = Split(fName, "_")
     strDataSource = fnamesplit(1)
     feed1Stream.LoadFromFile (FeedFilePath & "\" & fName)
     If Trim(dcp3fname) = "" Then  ' this logic will check if dcp3 exist or not
       dcpfeedStream.LoadFromFile (FeedFilePath & "\" & dcp2fname)
       DCP_ID_other = "DCP2_ID"
       DCP_city_other = "DCP2_City"
      Else
       dcpfeedStream.LoadFromFile (FeedFilePath & "\" & dcp3fname)
       DCP_ID_other = "DCP3_ID"
       DCP_city_other = "DCP3_City"
     End If
     
     If strDataSource = "CCX" Or strDataSource = "CIF" Or strDataSource = "PAP" Or strDataSource = "PTT" Or strDataSource = "TD3" Or strDataSource = "TSP" Or strDataSource = "WKD" Then
            Do While feed1Stream.EOS <> True
               readlnefeed1 = feed1Stream.ReadText(-2)
               readlnedcpfeed = dcpfeedStream.ReadText(-2)
               Feed_ID_feed1 = Trim(Mid(readlnefeed1, 1, 30))
               Feed_ID_dcpfeed = Trim(Mid(readlnedcpfeed, 17, 30))
                If Feed_ID_feed1 = Empty Then
                  Feed_ID_feed1 = ""
                End If
                If Feed_ID_dcpfeed = Empty Then
                  Feed_ID_dcpfeed = ""
                End If
               city_name_feed1 = Trim(Mid(readlne, 331, 50))
               city_name_dcpfeed = Trim(Mid(readlnedcpfeed, 347, 50))
                       
               If Not (StrComp(city_name_feed1, city_name_dcpfeed, 1) = 0) Then ' Case for Invalid
            '********************************************************************************
                    ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 1).Value = Feed_ID_feed1
                    ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 2).Value = Feed_ID_dcpfeed
                    ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 3).Value = party_name_feed1
                    ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 4).Value = party_name_dcpfeed
                    ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 5).Value = strDataSource
                    
                    Select Case strDataSource
                     Case "CCX"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0063"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0242_TC_0243"
                     Case "CIF"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0064"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0248_TC_0249"
                     Case "PAP"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0065"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0254_TC_0255"
                     Case "PTT"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0066"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0260_TC_0261"
                     Case "TD3"
                        ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0067"
'                        ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0266_TC_0267"
                     Case "TSP"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0068"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0272_TC_0273"
                     Case "WKD"
                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TS_0069"
'                       ThisWorkbook.Sheets("DCPAnomalyList").Cells(j, 6).Value = "TC_0276_TC_0277"
                    End Select
            '*********************************************************************************
                    anomaly_count = anomaly_count + 1
                    j = j + 1
                    temp = temp + 1
                Else ' Case for Valid
                  DataSourceName = strDataSource & "_DELTA"
                  Query = "SELECT * FROM [BR E348-04$A6:BZ] where DCP_ID1 like  '" & Feed_ID_feed1 & "'  and " & DCP_ID_other & " like  '" & Feed_ID_dcpfeed & "' " & _
                    "and DCP1_City like '" & city_name_feed1 & "' and " & DCP_city_other & " like  '" & city_name_dcpfeed & "' and SourceSystemCode like '" & DataSourceName & "' "
                  
                  rsexcel.Open Query, exlconn, adOpenStatic, adLockOptimistic, adCmdText
                     
                    If rsexcel.RecordCount > 0 Then
                        resltstatus = "Failed"
                        valid_temp = valid_temp + 1
                      Else
                        resltstatus = "Passed"
                    End If
                    
                    Ver_Col_Name = "DCP1_CITY" & "and" & DCP_city_other
                    city_name = city_name_feed1 & " and " & city_name_dcpfeed
                    Feed_ID = Feed_ID_feed1 & " and " & Feed_ID_dcpfeed
                    
                  Select Case strDataSource
                      Case "CCX"
                        Call detail_report("TS_0063", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "CIF"
                        Call detail_report("TS_0064", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "PAP"
                        Call detail_report("TS_0065", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "PTT"
                        Call detail_report("TS_0066", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "TD3"
                         Call detail_report("TS_0067", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                      Case "TSP"
                        Call detail_report("TS_0068", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                       Case "WKD"
                        Call detail_report("TS_0069", resltstatus, strDataSource, Feed_ID, Ver_Col_Name & " column should not have the value as " & city_name & " for FeedId " & Feed_ID, Ver_Col_Name & " column have the value as " & city_name & " for FeedId " & Feed_ID)
                    End Select
                  rsexcel.Close
               End If
            Loop
          Call write_anomaly_count(strDataSource, temp)
     End If
    Next

   ActiveWorkbook.Close
   Set rsexcel = Nothing
   Set exlconn = Nothing

' *************************City should have the valid Characters*************************
     If (valid_temp = 0) Then
        Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_valid_Charcters", "Passed", "", 14)
        Passed_Test_Case = Passed_Test_Case + 1
      Else
       Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_valid_Charcters", "Failed", "", 14)
        Failed_Test_Case = Failed_Test_Case + 1
     End If
'   ********************************************************

   chk_Anomaly = no_of_anomaly("E348-04", anomaly_count)
      
If (anomaly_count = 0 And chk_Anomaly = True) Then
   Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters", "Fail", "There is no Anomaly for this rule", 28)
'   Call detail_Report_Header("OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters")
  Else
    If (chk_Anomaly = True) Then
         Call detail_Report_Header("OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters")
         temp = verify_DQMC_DCP_Comparison(Feed_ID_feed1, Feed_ID_dcpfeed, "BR E348-04", city_name_feed1, city_name_dcpfeed, anomaly_count)
         If (temp = 0) Then
          Passed_Test_Case = Passed_Test_Case + 1
            Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters", "Pass", "No of Anomaly is not equal to the anomalies in DQMC", 14)
           Else
            Failed_Test_Case = Failed_Test_Case + 1
            Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 14)
          End If
         detailsReport.Close
         Set detailsReport = Nothing
       Else
         test_case_count = test_case_count + 1
         Failed_Test_Case = Failed_Test_Case + 1
         Call Summary_Report("E348-04", "OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters", "Fail", "No of Anomaly is not equal to the anomalies in DQMC", 14)
         Call detail_Report_Header("OFAC_HotScan_Primary_Physical_Address_City_Continuity_HotScan_Invalid_Charcters")
         temp = verify_DQMC_DCP_Comparison(Feed_ID_feed1, Feed_ID_dcpfeed, "BR E348-04", city_name_feed1, city_name_dcpfeed, anomaly_count)
     End If
End If



 Set objStream = Nothing
End Function

